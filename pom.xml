<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>BunnyPlanet</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
    </properties>

<!--    服务器包-->
    <build>
        <!-- 项目最终打包成的名字 -->
        <finalName>BunnyPlanetServer</finalName>
        <plugins>
            <!--指定启动类-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <!-- 会在 MANIFEST.MF 中生成 Class-Path 项 -->
                            <!-- 系统会根据 Class-Path 项配置的路径加载依赖 -->
                            <addClasspath>true</addClasspath>
                            <!-- 指定依赖包所在目录，相对于项目最终 Jar 包的路径 -->
                            <classpathPrefix>lib/</classpathPrefix>
                            <!-- 指定 MainClass -->
                            <mainClass>Server</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- 配置依赖包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <!-- 相当于执行 mvn 命令，将依赖打包到指定目录 -->
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!--将依赖打包至 target 下的 lib 目录-->
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

<!--    客户端包-->
<!--    <build>-->
<!--        &lt;!&ndash; 项目最终打包成的名字 &ndash;&gt;-->
<!--        <finalName>BunnyPlanetClient</finalName>-->
<!--        <plugins>-->
<!--            &lt;!&ndash;指定启动类&ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-jar-plugin</artifactId>-->
<!--                <version>2.4</version>-->
<!--                <configuration>-->
<!--                    <archive>-->
<!--                        <manifest>-->
<!--                            &lt;!&ndash; 会在 MANIFEST.MF 中生成 Class-Path 项 &ndash;&gt;-->
<!--                            &lt;!&ndash; 系统会根据 Class-Path 项配置的路径加载依赖 &ndash;&gt;-->
<!--                            <addClasspath>true</addClasspath>-->
<!--                            &lt;!&ndash; 指定依赖包所在目录，相对于项目最终 Jar 包的路径 &ndash;&gt;-->
<!--                            <classpathPrefix>lib/</classpathPrefix>-->
<!--                            &lt;!&ndash; 指定 MainClass &ndash;&gt;-->
<!--                            <mainClass>Client</mainClass>-->
<!--                        </manifest>-->
<!--                    </archive>-->
<!--                </configuration>-->
<!--            </plugin>-->

<!--            &lt;!&ndash; 配置依赖包 &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-dependency-plugin</artifactId>-->
<!--                <version>2.8</version>-->
<!--                &lt;!&ndash; 相当于执行 mvn 命令，将依赖打包到指定目录 &ndash;&gt;-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>copy-dependencies</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>copy-dependencies</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            &lt;!&ndash;将依赖打包至 target 下的 lib 目录&ndash;&gt;-->
<!--                            <outputDirectory>${project.build.directory}/lib</outputDirectory>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->

</project>